# Generated by Django 5.1.11 on 2025-08-12 11:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('contacts', '0001_initial'),
        ('customers', '0001_initial'),
        ('deals', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('shipping_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Shipping fee for this document', max_digits=10)),
                ('shipping_vat_rate', models.DecimalField(decimal_places=2, default=20.0, help_text='VAT percentage for shipping (0-100)', max_digits=5)),
                ('rush_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Rush processing fee for this document', max_digits=10)),
                ('estimate_id', models.AutoField(primary_key=True, serialize=False)),
                ('estimate_number', models.CharField(help_text="Unique estimate number, e.g., 'EST-2024-001'", max_length=50, unique=True)),
                ('po_number', models.CharField(blank=True, help_text='Customer purchase order number', max_length=100, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='draft', help_text='Current status of the estimate', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, help_text='Sum of all line item subtotals (before VAT)', max_digits=14)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Sum of all line item totals (includes VAT)', max_digits=14)),
                ('estimate_date', models.DateField(help_text='Date when estimate was created')),
                ('valid_until', models.DateField(help_text='Expiration date of this estimate')),
                ('billing_attention', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_street', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_state_province', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_zip_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('billing_country', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_attention', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_street', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_city', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_state_province', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_zip_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('shipping_country', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes for this estimate', null=True)),
                ('terms_conditions', models.TextField(blank=True, help_text='Terms and conditions for this estimate', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(db_column='account_id', help_text='Account this estimate is for (required)', on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='accounts.account')),
                ('contact', models.ForeignKey(blank=True, db_column='contact_id', help_text='Primary contact person for this estimate', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimates', to='contacts.contact')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimates_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, db_column='customer_id', help_text='Customer this estimate is for', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='customers.financecontact')),
                ('deal', models.ForeignKey(blank=True, db_column='deal_id', help_text='Associated deal/opportunity', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimates', to='deals.deal')),
                ('owner', models.ForeignKey(blank=True, db_column='owner_id', help_text='Sales rep/owner of this estimate', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_estimates', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estimates_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estimate',
                'verbose_name_plural': 'Estimates',
                'db_table': 'estimate',
                'ordering': ['-estimate_date'],
            },
        ),
        migrations.CreateModel(
            name='EstimateLineItem',
            fields=[
                ('line_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, help_text='Custom description (can override product description)', null=True)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity ordered', max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit (can override product price)', max_digits=10)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount percentage (0-100)', max_digits=5)),
                ('vat_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='VAT percentage for this line item (0-100)', max_digits=5)),
                ('vat_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculated VAT amount for this line item', max_digits=14)),
                ('line_subtotal', models.DecimalField(decimal_places=2, default=0.0, help_text='(quantity Ã— unit_price) - discount', max_digits=14)),
                ('line_total', models.DecimalField(decimal_places=2, default=0.0, help_text='line_subtotal + vat_amount', max_digits=14)),
                ('sort_order', models.PositiveIntegerField(default=1, help_text='Display order of this line item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estimate', models.ForeignKey(db_column='estimate_id', help_text='Estimate this line item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='estimates.estimate')),
                ('product', models.ForeignKey(db_column='product_id', help_text='Product/service for this line item', on_delete=django.db.models.deletion.CASCADE, related_name='estimate_line_items', to='products.product')),
            ],
            options={
                'verbose_name': 'Estimate Line Item',
                'verbose_name_plural': 'Estimate Line Items',
                'db_table': 'estimate_line_item',
                'ordering': ['sort_order', 'line_item_id'],
            },
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['estimate_number'], name='idx_estimate_number'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['customer'], name='idx_estimate_customer'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['account'], name='idx_estimate_account'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['deal'], name='idx_estimate_deal'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['contact'], name='idx_estimate_contact'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['owner'], name='idx_estimate_owner'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['created_at'], name='idx_estimate_created'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['status'], name='idx_estimate_status'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['estimate_date'], name='idx_estimate_date'),
        ),
        migrations.AddIndex(
            model_name='estimate',
            index=models.Index(fields=['valid_until'], name='idx_estimate_valid_until'),
        ),
        migrations.AddConstraint(
            model_name='estimate',
            constraint=models.UniqueConstraint(fields=('estimate_number',), name='unique_estimate_number_per_schema'),
        ),
        migrations.AddIndex(
            model_name='estimatelineitem',
            index=models.Index(fields=['estimate'], name='idx_est_line_estimate'),
        ),
        migrations.AddIndex(
            model_name='estimatelineitem',
            index=models.Index(fields=['product'], name='idx_est_line_product'),
        ),
        migrations.AddIndex(
            model_name='estimatelineitem',
            index=models.Index(fields=['vat_rate'], name='idx_est_line_vat_rate'),
        ),
        migrations.AddIndex(
            model_name='estimatelineitem',
            index=models.Index(fields=['sort_order'], name='idx_est_line_sort_order'),
        ),
    ]
