# Generated by Django 5.1.11 on 2025-08-21 11:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "customers",
            "0009_remove_financecontact_unique_fincontact_account_contact_per_schema_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="financecontact",
            name="contact_persons",
        ),
        migrations.CreateModel(
            name="ContactPerson",
            fields=[
                (
                    "contact_person_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "salutation",
                    models.CharField(
                        blank=True,
                        help_text="Salutation for the contact person (Mr, Ms, Dr, etc.)",
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="First name of the contact person", max_length=100
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Last name of the contact person",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address of the contact person",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=50, null=True
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, help_text="Mobile number", max_length=50, null=True
                    ),
                ),
                (
                    "skype",
                    models.CharField(
                        blank=True, help_text="Skype address", max_length=50, null=True
                    ),
                ),
                (
                    "designation",
                    models.CharField(
                        blank=True,
                        help_text="Job title or designation",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department", max_length=50, null=True
                    ),
                ),
                (
                    "is_primary_contact",
                    models.BooleanField(
                        default=False, help_text="Is this the primary contact person"
                    ),
                ),
                (
                    "enable_portal",
                    models.BooleanField(
                        default=False,
                        help_text="Enable portal access for this contact person",
                    ),
                ),
                (
                    "is_added_in_portal",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the contact person has portal access",
                    ),
                ),
                (
                    "is_sms_enabled",
                    models.BooleanField(
                        default=False, help_text="SMS communication preference enabled"
                    ),
                ),
                (
                    "is_whatsapp_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="WhatsApp communication preference enabled",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact",
                    models.ForeignKey(
                        db_column="contact_id",
                        help_text="Parent finance contact",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_persons_rel",
                        to="customers.financecontact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this contact person",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_persons_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this contact person",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_persons_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Person",
                "verbose_name_plural": "Contact Persons",
                "db_table": "finance_contact_person",
                "ordering": [
                    "contact",
                    "-is_primary_contact",
                    "first_name",
                    "last_name",
                ],
                "indexes": [
                    models.Index(fields=["contact"], name="idx_cp_contact"),
                    models.Index(
                        fields=["contact", "is_primary_contact"],
                        name="idx_cp_contact_primary",
                    ),
                    models.Index(fields=["email"], name="idx_cp_email"),
                    models.Index(
                        fields=["first_name", "last_name"], name="idx_cp_name"
                    ),
                    models.Index(fields=["created_at"], name="idx_cp_created"),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("is_primary_contact", True)),
                        fields=("contact",),
                        name="unique_primary_cp_per_contact",
                    )
                ],
            },
        ),
    ]
