# Generated by Django 5.1.11 on 2025-08-18 09:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0001_initial'),
        ('accounts', '0001_initial'),
        ('contacts', '0001_initial'),
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='customer',
            name='unique_customer_account_contact_per_schema',
        ),
        migrations.AddField(
            model_name='customer',
            name='billing_fax',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='billing_phone',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='billing_state_code',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='company_name',
            field=models.CharField(blank=True, help_text='Company name for vendors without CRM account', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_name',
            field=models.CharField(blank=True, help_text='Primary contact display name', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_persons',
            field=models.JSONField(blank=True, default=list, help_text='List of additional contact persons'),
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_type',
            field=models.CharField(choices=[('customer', 'Customer'), ('vendor', 'Vendor'), ('both', 'Both Customer and Vendor')], db_index=True, default='customer', help_text='Indicates if this is a customer, vendor, or both', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='credit_limit',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Credit limit for the customer', max_digits=15, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='crm_account_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Link to CRM Account ID', null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='crm_contact_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Link to CRM Contact ID', null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='custom_fields',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_number',
            field=models.CharField(blank=True, db_index=True, help_text='Customer ID in format CUST-XXXX', max_length=20, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='documents',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='customer',
            name='email',
            field=models.EmailField(blank=True, help_text='Direct email', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='facebook',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='first_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='is_portal_enabled',
            field=models.BooleanField(default=False, help_text='Enable customer portal access'),
        ),
        migrations.AddField(
            model_name='customer',
            name='is_taxable',
            field=models.BooleanField(default=True, help_text='Is this contact taxable'),
        ),
        migrations.AddField(
            model_name='customer',
            name='language_code',
            field=models.CharField(blank=True, help_text='Preferred language (de/en/es/fr/it/ja/nl/pt/zh)', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='last_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='mobile',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='opening_balances',
            field=models.JSONField(blank=True, help_text='Opening balance information {amount, exchange_rate, date}', null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='outstanding_receivable_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total outstanding amount', max_digits=15),
        ),
        migrations.AddField(
            model_name='customer',
            name='payable_account',
            field=models.ForeignKey(blank=True, help_text='Accounts Payable account for vendors', limit_choices_to={'account_type': 'accounts_payable'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_payables', to='accounting.chartofaccount'),
        ),
        migrations.AddField(
            model_name='customer',
            name='payment_reminder_enabled',
            field=models.BooleanField(default=True, help_text='Send payment reminders'),
        ),
        migrations.AddField(
            model_name='customer',
            name='payment_terms_label',
            field=models.CharField(blank=True, help_text='Custom payment terms label', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='phone',
            field=models.CharField(blank=True, help_text='Direct phone', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='place_of_contact',
            field=models.CharField(blank=True, help_text='Place of contact for VAT purposes', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='receivable_account',
            field=models.ForeignKey(blank=True, help_text='Accounts Receivable account for customers', limit_choices_to={'account_type': 'accounts_receivable'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_receivables', to='accounting.chartofaccount'),
        ),
        migrations.AddField(
            model_name='customer',
            name='shipping_fax',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='shipping_phone',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='shipping_state_code',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='source',
            field=models.CharField(choices=[('finance', 'Finance'), ('crm', 'CRM')], default='finance', help_text='Source of this record', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', help_text='Contact status', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='tax_exemption_certificate_number',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='tax_exemption_code',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='tax_id',
            field=models.CharField(blank=True, help_text='Generic tax ID', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='twitter',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='unused_credits_receivable_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Unused credit amount', max_digits=15),
        ),
        migrations.AddField(
            model_name='customer',
            name='vat_reg_no',
            field=models.CharField(blank=True, help_text='Additional VAT registration number', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='vendor_number',
            field=models.CharField(blank=True, db_index=True, help_text='Vendor ID in format VEND-XXXX', max_length=20, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='website',
            field=models.URLField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='account',
            field=models.ForeignKey(blank=True, db_column='account_id', help_text='Link to CRM Account (optional - will create if entered)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='accounts.account'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['contact_type'], name='idx_customer_contact_type'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['customer_number'], name='idx_customer_number'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['vendor_number'], name='idx_vendor_number'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['crm_account_id'], name='idx_crm_account_id'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['crm_contact_id'], name='idx_crm_contact_id'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(condition=models.Q(('account__isnull', False)), fields=('account', 'primary_contact'), name='unique_customer_account_contact_per_schema'),
        ),
    ]
