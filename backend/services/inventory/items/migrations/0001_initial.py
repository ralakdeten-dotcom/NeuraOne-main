# Generated by Django 5.1.11 on 2025-08-21 08:42

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0003_remove_accounttransaction_finance_acc_custome_5e65b0_idx_and_more'),
        ('customers', '0009_remove_financecontact_unique_fincontact_account_contact_per_schema_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('customfield_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('field_name', models.CharField(max_length=100, unique=True)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('select', 'Select')], max_length=10)),
                ('field_options', models.JSONField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'inventory_custom_fields',
                'ordering': ['display_order', 'field_name'],
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('group_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(default='qty', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], db_index=True, default='active', max_length=10)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_modified_time', models.DateTimeField(auto_now=True)),
                ('is_taxable', models.BooleanField(default=True)),
                ('tax_id', models.BigIntegerField(blank=True, null=True)),
                ('tax_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tax_type', models.CharField(blank=True, max_length=100, null=True)),
                ('image_id', models.CharField(blank=True, max_length=50, null=True)),
                ('image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_type', models.CharField(blank=True, max_length=10, null=True)),
                ('product_type', models.CharField(choices=[('goods', 'Goods'), ('service', 'Service')], default='goods', max_length=10)),
            ],
            options={
                'db_table': 'inventory_item_groups',
                'ordering': ['group_name'],
                'indexes': [models.Index(fields=['group_name'], name='inventory_i_group_n_6909ee_idx'), models.Index(fields=['status'], name='inventory_i_status_2bbda0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], db_index=True, default='active', max_length=10)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_modified_time', models.DateTimeField(auto_now=True)),
                ('item_type', models.CharField(choices=[('inventory', 'Inventory'), ('sales', 'Sales'), ('purchases', 'Purchases'), ('sales_and_purchases', 'Sales and Purchases')], db_index=True, default='inventory', max_length=30)),
                ('product_type', models.CharField(choices=[('goods', 'Goods'), ('service', 'Service')], default='goods', max_length=10)),
                ('is_combo_product', models.BooleanField(default=False)),
                ('is_returnable', models.BooleanField(default=True)),
                ('rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('pricebook_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('purchase_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit', models.CharField(default='pcs', max_length=50)),
                ('reorder_level', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('initial_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('initial_stock_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('stock_on_hand', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('actual_available_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('available_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('sku', models.CharField(help_text='Stock Keeping Unit - unique identifier', max_length=100, unique=True)),
                ('upc', models.CharField(blank=True, help_text='Universal Product Code (12 digits)', max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{12}$', 'UPC must be exactly 12 digits')])),
                ('ean', models.CharField(blank=True, help_text='European Article Number (13 digits)', max_length=13, null=True, validators=[django.core.validators.RegexValidator('^\\d{13}$', 'EAN must be exactly 13 digits')])),
                ('isbn', models.CharField(blank=True, help_text='International Standard Book Number', max_length=20, null=True)),
                ('part_number', models.CharField(blank=True, help_text='Manufacturer part number', max_length=100, null=True)),
                ('purchase_description', models.TextField(blank=True, help_text='Description for purchase orders', null=True)),
                ('attribute_id1', models.BigIntegerField(blank=True, null=True)),
                ('attribute_name1', models.CharField(blank=True, max_length=100, null=True)),
                ('attribute_option_id1', models.BigIntegerField(blank=True, null=True)),
                ('attribute_option_name1', models.CharField(blank=True, max_length=100, null=True)),
                ('image_id', models.BigIntegerField(blank=True, null=True)),
                ('image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_type', models.CharField(blank=True, max_length=10, null=True)),
                ('documents', models.JSONField(blank=True, default=list)),
                ('account_id', models.ForeignKey(blank=True, help_text='Sales account for this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_items', to='accounting.chartofaccount')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_created', to=settings.AUTH_USER_MODEL)),
                ('inventory_account_id', models.ForeignKey(blank=True, help_text='Inventory asset account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='accounting.chartofaccount')),
                ('purchase_account_id', models.ForeignKey(blank=True, help_text='Purchase account for this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_items', to='accounting.chartofaccount')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_updated', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(blank=True, help_text='Primary vendor/supplier', limit_choices_to=models.Q(('contact_type', 'vendor'), ('contact_type', 'customer_and_vendor'), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_items', to='customers.financecontact')),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory_items.itemgroup')),
            ],
            options={
                'db_table': 'inventory_items',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(choices=[('general', 'General'), ('line_item_only', 'Line Item Only')], default='general', max_length=20)),
                ('parent_location_id', models.BigIntegerField(blank=True, null=True)),
                ('attention', models.CharField(blank=True, max_length=255, null=True)),
                ('street_address1', models.CharField(blank=True, max_length=255, null=True)),
                ('street_address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], db_index=True, default='active', max_length=10)),
                ('tax_settings_id', models.BigIntegerField(blank=True, null=True)),
                ('autonumbergenerationgroup_id', models.BigIntegerField(blank=True, null=True)),
                ('is_all_users_selected', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'inventory_locations',
                'ordering': ['-is_primary', 'location_name'],
                'indexes': [models.Index(fields=['location_name'], name='inventory_l_locatio_54fa6e_idx'), models.Index(fields=['status'], name='inventory_l_status_0097ca_idx'), models.Index(fields=['is_primary'], name='inventory_l_is_prim_df3519_idx')],
            },
        ),
        migrations.CreateModel(
            name='ItemLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_stock_on_hand', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('location_available_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('location_actual_available_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=15)),
                ('is_primary', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_locations', to='inventory_items.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_stocks', to='inventory_items.location')),
            ],
            options={
                'db_table': 'inventory_item_locations',
                'ordering': ['-is_primary', 'location__location_name'],
            },
        ),
        migrations.CreateModel(
            name='ItemCustomFieldValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_items.customfield')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_field_values', to='inventory_items.item')),
            ],
            options={
                'db_table': 'inventory_item_custom_field_values',
                'unique_together': {('item', 'custom_field')},
            },
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['sku'], name='inventory_i_sku_af71e8_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['name'], name='inventory_i_name_eafb8b_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['status'], name='inventory_i_status_dd76b8_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['item_type'], name='inventory_i_item_ty_2421a1_idx'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_item_name_per_tenant'),
        ),
        migrations.AlterUniqueTogether(
            name='itemlocation',
            unique_together={('item', 'location')},
        ),
    ]
