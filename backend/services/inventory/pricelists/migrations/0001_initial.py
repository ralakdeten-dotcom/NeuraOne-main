# Generated by Django 5.1.11 on 2025-08-22 09:01

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory_items', '0004_add_sales_description'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceBook',
            fields=[
                ('pricebook_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('currency_id', models.CharField(max_length=50)),
                ('currency_code', models.CharField(blank=True, max_length=10, null=True)),
                ('decimal_place', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_default', models.BooleanField(default=False)),
                ('is_increase', models.BooleanField()),
                ('percentage', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('pricebook_type', models.CharField(choices=[('per_item', 'Per Item'), ('fixed_percentage', 'Fixed Percentage')], max_length=20)),
                ('rounding_type', models.CharField(choices=[('no_rounding', 'No Rounding'), ('round_to_dollor', 'Round to Dollar'), ('round_to_dollar_minus_01', 'Round to Dollar Minus 0.01'), ('round_to_half_dollar', 'Round to Half Dollar'), ('round_to_half_dollar_minus_01', 'Round to Half Dollar Minus 0.01')], default='no_rounding', max_length=30)),
                ('sales_or_purchase_type', models.CharField(choices=[('sales', 'Sales'), ('purchases', 'Purchases')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], db_index=True, default='active', max_length=10)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_modified_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pricelists_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pricelists_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inventory_pricebooks',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='PriceBookItem',
            fields=[
                ('pricebook_item_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pricebook_rate', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_modified_time', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricebook_items', to='inventory_items.item')),
                ('pricebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricebook_items', to='pricelists.pricebook')),
            ],
            options={
                'db_table': 'inventory_pricebook_items',
                'ordering': ['item__name'],
            },
        ),
        migrations.AddIndex(
            model_name='pricebook',
            index=models.Index(fields=['name'], name='inventory_p_name_ab67b0_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebook',
            index=models.Index(fields=['status'], name='inventory_p_status_d283e7_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebook',
            index=models.Index(fields=['pricebook_type'], name='inventory_p_pricebo_9b1c2e_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebook',
            index=models.Index(fields=['sales_or_purchase_type'], name='inventory_p_sales_o_0cc77e_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebook',
            index=models.Index(fields=['is_default'], name='inventory_p_is_defa_0ccbcd_idx'),
        ),
        migrations.AddConstraint(
            model_name='pricebook',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_pricebook_name_per_tenant'),
        ),
        migrations.AddIndex(
            model_name='pricebookitem',
            index=models.Index(fields=['pricebook'], name='inventory_p_pricebo_a996d9_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebookitem',
            index=models.Index(fields=['item'], name='inventory_p_item_id_79e533_idx'),
        ),
        migrations.AddIndex(
            model_name='pricebookitem',
            index=models.Index(fields=['pricebook_rate'], name='inventory_p_pricebo_a14819_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pricebookitem',
            unique_together={('pricebook', 'item')},
        ),
    ]
